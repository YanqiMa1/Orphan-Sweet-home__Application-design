/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.AdministrativeRole;

import Model.EcoSystem.EcoSystem;
import Model.EcoSystem.Network;
import Model.Enterprise.Enterprise;
import Model.Organization.Organization;
import Model.Role.Role;
import Model.UserAccount.UserAccount;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hp
 */
public class ManageUserAccountJPanel extends javax.swing.JPanel {

    EcoSystem ecosys;
    UserAccount useraccount;

    /**
     * Creates new form ManageUserAccountJPanel
     */
    public ManageUserAccountJPanel() {
        initComponents();
    }

    public ManageUserAccountJPanel(EcoSystem ecosys, UserAccount useraccount) {
        initComponents();
        this.ecosys = ecosys;
        this.useraccount = useraccount;

        populateNetworkCombo();
        populateEnterpriseCombo();
        populateOrgCombo();
        populateRoleCombo();
        populateUserAccountsTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel3 = new keeptoo.KGradientPanel();
        lblTitle = new javax.swing.JLabel();
        lblUsersList = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsers = new javax.swing.JTable();
        lblOrganization = new javax.swing.JLabel();
        cmbEnterprise = new javax.swing.JComboBox();
        lblEmployee = new javax.swing.JLabel();
        cmbOrg = new javax.swing.JComboBox();
        lblRole = new javax.swing.JLabel();
        cmbRoles = new javax.swing.JComboBox();
        lblUserName = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        btnCreateUser = new javax.swing.JButton();
        lblOrganizationPicker = new javax.swing.JLabel();
        cmbNetworkList = new javax.swing.JComboBox();
        btnDeleteUser = new javax.swing.JButton();
        btnUpdateUser = new javax.swing.JButton();
        pwdUser = new javax.swing.JTextField();

        setLayout(new java.awt.BorderLayout());

        kGradientPanel3.setkEndColor(new java.awt.Color(255, 221, 225));
        kGradientPanel3.setkStartColor(new java.awt.Color(238, 156, 167));
        kGradientPanel3.setPreferredSize(new java.awt.Dimension(800, 520));
        kGradientPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setText("Manage Users");
        kGradientPanel3.add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 30, 189, -1));

        lblUsersList.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblUsersList.setForeground(new java.awt.Color(255, 255, 255));
        lblUsersList.setText("Users List:");
        kGradientPanel3.add(lblUsersList, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        tblUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User Name", "Role", "Organization", "Enterprise", "Network"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblUsers);

        kGradientPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 411, 340));

        lblOrganization.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblOrganization.setForeground(new java.awt.Color(255, 255, 255));
        lblOrganization.setText("Enterprise:");
        kGradientPanel3.add(lblOrganization, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 130, -1, -1));

        cmbEnterprise.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbEnterpriseItemStateChanged(evt);
            }
        });
        kGradientPanel3.add(cmbEnterprise, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 130, 160, -1));

        lblEmployee.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblEmployee.setForeground(new java.awt.Color(255, 255, 255));
        lblEmployee.setText("Organization:");
        kGradientPanel3.add(lblEmployee, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 170, -1, -1));

        cmbOrg.setPreferredSize(new java.awt.Dimension(72, 40));
        cmbOrg.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbOrgItemStateChanged(evt);
            }
        });
        kGradientPanel3.add(cmbOrg, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 170, 160, 20));

        lblRole.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblRole.setForeground(new java.awt.Color(255, 255, 255));
        lblRole.setText("Role:");
        kGradientPanel3.add(lblRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 210, -1, -1));

        cmbRoles.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbRolesItemStateChanged(evt);
            }
        });
        kGradientPanel3.add(cmbRoles, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 210, 160, -1));

        lblUserName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblUserName.setForeground(new java.awt.Color(255, 255, 255));
        lblUserName.setText("User Name:");
        kGradientPanel3.add(lblUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 250, -1, -1));
        kGradientPanel3.add(txtUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 250, 160, -1));

        lblPassword.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblPassword.setForeground(new java.awt.Color(255, 255, 255));
        lblPassword.setText("Password:");
        kGradientPanel3.add(lblPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 290, -1, -1));

        btnCreateUser.setBackground(new java.awt.Color(238, 156, 167));
        btnCreateUser.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCreateUser.setForeground(new java.awt.Color(255, 255, 255));
        btnCreateUser.setText("Create User");
        btnCreateUser.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCreateUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateUserActionPerformed(evt);
            }
        });
        kGradientPanel3.add(btnCreateUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 360, 238, 33));

        lblOrganizationPicker.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblOrganizationPicker.setForeground(new java.awt.Color(255, 255, 255));
        lblOrganizationPicker.setText("NetWork");
        kGradientPanel3.add(lblOrganizationPicker, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 90, -1, -1));

        cmbNetworkList.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbNetworkListItemStateChanged(evt);
            }
        });
        kGradientPanel3.add(cmbNetworkList, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 90, 160, -1));

        btnDeleteUser.setBackground(new java.awt.Color(238, 156, 167));
        btnDeleteUser.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDeleteUser.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteUser.setText("Delete User");
        btnDeleteUser.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDeleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteUserActionPerformed(evt);
            }
        });
        kGradientPanel3.add(btnDeleteUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 440, 238, 33));

        btnUpdateUser.setBackground(new java.awt.Color(238, 156, 167));
        btnUpdateUser.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdateUser.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateUser.setText("Update User");
        btnUpdateUser.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnUpdateUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateUserActionPerformed(evt);
            }
        });
        kGradientPanel3.add(btnUpdateUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 400, 238, 33));
        kGradientPanel3.add(pwdUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 290, 160, -1));

        add(kGradientPanel3, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateUserActionPerformed

        try {

            String userName = txtUserName.getText();
            String password = pwdUser.getText();

            Network network = (Network) cmbNetworkList.getSelectedItem();

            String selectedEntOption = (String) cmbEnterprise.getSelectedItem();
            String enterpriseName = selectedEntOption.split("\\s\\|\\s")[1];
            Enterprise enterprise = network.getEnterpriseDirectory().getEnterpriseByName(enterpriseName);

            String selectedOrgOption = cmbOrg.getSelectedItem().toString();
            String orgName = selectedOrgOption.split("\\s\\|\\s")[1];
            Organization organization = enterprise.getOrganizationDirectory().getOrganizationByName(orgName);

            if ((!userName.isEmpty()) && (!password.isEmpty())) {
                if (this.ecosys.getUserAccountDirectory().userNameIsUnique(userName)) {
                    Role role = (Role) cmbRoles.getSelectedItem();
                    this.ecosys.getUserAccountDirectory().createUserAccount(userName, password, role, network, enterprise, organization);
                    JOptionPane.showMessageDialog(this, "User Account added successfully.", "Information", JOptionPane.INFORMATION_MESSAGE);
                    txtUserName.setText("");
                    pwdUser.setText("");
                    populateUserAccountsTable();
                } else {
                    JOptionPane.showMessageDialog(this, "Username already existed", "Warning", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Username & Password cannot be empty", "Warning", JOptionPane.WARNING_MESSAGE);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "please choose an useraccount.", "Warning", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnCreateUserActionPerformed

    private void cmbNetworkListItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbNetworkListItemStateChanged
        populateEnterpriseCombo();
        populateOrgCombo();
        populateRoleCombo();
        populateUserAccountsTable();
    }//GEN-LAST:event_cmbNetworkListItemStateChanged

    private void cmbEnterpriseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbEnterpriseItemStateChanged
        populateOrgCombo();
        populateRoleCombo();
        populateUserAccountsTable();
    }//GEN-LAST:event_cmbEnterpriseItemStateChanged

    private void cmbOrgItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbOrgItemStateChanged
        populateRoleCombo();
        populateUserAccountsTable();
    }//GEN-LAST:event_cmbOrgItemStateChanged

    private void cmbRolesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbRolesItemStateChanged
        populateUserAccountsTable();
    }//GEN-LAST:event_cmbRolesItemStateChanged

    private void btnUpdateUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateUserActionPerformed
        try {
            String keywordName = txtUserName.getText();
            String keyPass =pwdUser.getText();

            int selectedRow = tblUsers.getSelectedRow();
            Network network = (Network) cmbNetworkList.getSelectedItem();

            String selectedOption = (String) cmbEnterprise.getSelectedItem();
            String enterpriseName = selectedOption.split("\\s\\|\\s")[1];
            Enterprise enterprise = network.getEnterpriseDirectory().getEnterpriseByName(enterpriseName);

            String selectedOrgOption = cmbOrg.getSelectedItem().toString();
            String orgName = selectedOrgOption.split("\\s\\|\\s")[1];
            Organization organization = enterprise.getOrganizationDirectory().getOrganizationByName(orgName);

            UserAccount selecteduser = (UserAccount) tblUsers.getValueAt(selectedRow, 0);

            if (selectedRow >= 0) {
                if ((!keywordName.isEmpty()) && (!keyPass.isEmpty())) {
                    if (this.ecosys.getUserAccountDirectory().userNameIsUnique(keywordName)) {
                        selecteduser.setUsername(keywordName);
                        selecteduser.setPassword(keyPass);

                        JOptionPane.showMessageDialog(this, " UserAcocunt aupdated", "Information", JOptionPane.INFORMATION_MESSAGE);
                        txtUserName.setText("");
                        pwdUser.setText("");
                        populateUserAccountsTable();
                    } else {
                        JOptionPane.showMessageDialog(this, "user name alreay existed", "Warning", JOptionPane.WARNING_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Name/password cannot be empty.", "Warning", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please choose an Useraccount");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "please choose an useraccount.", "Warning", JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_btnUpdateUserActionPerformed

    private void btnDeleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteUserActionPerformed
        try {
            int selectedRow = tblUsers.getSelectedRow();

            Network network = (Network) cmbNetworkList.getSelectedItem();
            String selectedOption = (String) cmbEnterprise.getSelectedItem();
            String enterpriseName = selectedOption.split("\\s\\|\\s")[1];
            Enterprise enterprise = network.getEnterpriseDirectory().getEnterpriseByName(enterpriseName);

            String selectedOrgOption = cmbOrg.getSelectedItem().toString();
            String orgName = selectedOrgOption.split("\\s\\|\\s")[1];
            Organization organization = enterprise.getOrganizationDirectory().getOrganizationByName(orgName);

            UserAccount ua = (UserAccount) tblUsers.getValueAt(selectedRow, 0);

            if (selectedRow >= 0) {

                this.ecosys.getUserAccountDirectory().deleteUserAccount(ua);
                txtUserName.setText("");
                pwdUser.setText("");
                populateUserAccountsTable();
                JOptionPane.showMessageDialog(this, "UserAccount deleted", "Information", JOptionPane.INFORMATION_MESSAGE);

            } else {
                JOptionPane.showMessageDialog(null, "Please choose an UserAccount");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "please choose an useraccount.", "Warning", JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_btnDeleteUserActionPerformed
    public void populateUserAccountsTable() {

        DefaultTableModel model = (DefaultTableModel) tblUsers.getModel();
        model.setRowCount(0);

        for (UserAccount ua : this.ecosys.getUserAccountDirectory().getUserAccountList()) {
            Object row[] = new Object[5];
            row[0] = ua;
            row[1] = ua.getRole();
            row[2] = ua.getOrgainization();
            row[3] = ua.getEnterprise();
            row[4] = ua.getNetwork();
            model.addRow(row);
        }
    }

    private void populateNetworkCombo() {

        cmbNetworkList.removeAllItems();

        if (!this.ecosys.getNetworkList().isEmpty()) {
            for (Network n : this.ecosys.getNetworkList()) {
                cmbNetworkList.addItem(n);
            }
        }
    }

    private void populateEnterpriseCombo() {

        cmbEnterprise.removeAllItems();

        Network network = (Network) cmbNetworkList.getSelectedItem();

        if (network != null) {
            for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
                cmbEnterprise.addItem(e.getType() + " | " + e);
            }
        }
    }

    private void populateOrgCombo() {

        cmbOrg.removeAllItems();

        Network network = (Network) cmbNetworkList.getSelectedItem();

        if (cmbEnterprise.getSelectedItem() != null) {
            String selectedOption = (String) cmbEnterprise.getSelectedItem();
            String enterpriseName = selectedOption.split("\\s\\|\\s")[1];
            Enterprise enterprise = network.getEnterpriseDirectory().getEnterpriseByName(enterpriseName);

            for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
                cmbOrg.addItem(o.getType() + " | " + o);
            }
        }
    }

    private void populateRoleCombo() {

        cmbRoles.removeAllItems();

        Network network = (Network) cmbNetworkList.getSelectedItem();

        if (cmbEnterprise.getSelectedItem() != null) {
            String selectedEntOption = (String) cmbEnterprise.getSelectedItem();
            String enterpriseName = selectedEntOption.split("\\s\\|\\s")[1];
            Enterprise enterprise = network.getEnterpriseDirectory().getEnterpriseByName(enterpriseName);

            if (cmbOrg.getSelectedItem() != null) {
                String selectedOrgOption = cmbOrg.getSelectedItem().toString();
                String orgName = selectedOrgOption.split("\\|\\s")[1];
                Organization organization = enterprise.getOrganizationDirectory().getOrganizationByName(orgName);

                for (Role role : organization.getSupportedRole()) {
                    cmbRoles.addItem(role);
                }

            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateUser;
    private javax.swing.JButton btnDeleteUser;
    private javax.swing.JButton btnUpdateUser;
    private javax.swing.JComboBox cmbEnterprise;
    private javax.swing.JComboBox cmbNetworkList;
    private javax.swing.JComboBox cmbOrg;
    private javax.swing.JComboBox cmbRoles;
    private javax.swing.JScrollPane jScrollPane1;
    private keeptoo.KGradientPanel kGradientPanel3;
    private javax.swing.JLabel lblEmployee;
    private javax.swing.JLabel lblOrganization;
    private javax.swing.JLabel lblOrganizationPicker;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JLabel lblUsersList;
    private javax.swing.JTextField pwdUser;
    private javax.swing.JTable tblUsers;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
